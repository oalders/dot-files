call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter' " show git diff markers in the sign colum
Plug 'ajh17/VimCompletesMe'
Plug 'altercation/vim-colors-solarized' " Solarized colour scheme
Plug 'AndrewRadev/splitjoin.vim'
Plug 'bkad/CamelCaseMotion' " provide CamelCase motion through words
Plug 'bronson/vim-trailing-whitespace' " highlight trailing whitespace
Plug 'c9s/perlomni.vim'
Plug 'chrisbra/unicode.vim'
Plug 'ConradIrwin/vim-bracketed-paste'
Plug 'dhruvasagar/vim-zoom' " Toggle zoom in / out individual windows (splits)
Plug 'fatih/vim-go' ", { 'do': ':GoUpdateBinaries' } messes up Travis runs
Plug 'haya14busa/vim-auto-mkdir' " create directory path on save
Plug 'itchyny/vim-cursorword'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/rainbow_parentheses.vim'
Plug 'junegunn/vader.vim'
Plug 'junegunn/vim-emoji'
Plug 'junegunn/vim-slash'
Plug 'lifepillar/vim-solarized8'
Plug 'lukhio/vim-mapping-conflicts'
Plug 'mannih/vim-perl-variable-highlighter'
Plug 'mhartington/oceanic-next'
Plug 'mzlogin/vim-markdown-toc'
Plug 'oalders/prettysql' " ,fs to format visually selected SQL
Plug 'oalders/vim-perl', { 'branch': 'dev', 'for': 'perl', 'do': 'make clean carp dancer highlight-all-pragmas moose test-more try-tiny' }
Plug 'othree/html5.vim'
Plug 'rhysd/git-messenger.vim'
Plug 'rodjek/vim-puppet', { 'for': 'puppet' } " Formatting, syntax highlighting etc
Plug 'ryanpcmcquen/fix-vim-pasting' " Automaticall set paste mode when inserting via insert mode
Plug 'scrooloose/nerdcommenter'
Plug 'sheerun/vim-polyglot'
Plug 'skaji/syntax-check-perl'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/vim-json-bundle'
Plug 'dense-analysis/ale', { 'tag': 'v3.1.0' }
Plug 'yko/mojo.vim'

if has('nvim')
  Plug 'itchyny/lightline.vim'
  Plug 'nvim-treesitter/nvim-treesitter', { 'branch': '0.5-compat', 'do': ':TSUpdate'}  " We recommend updating the parsers on update
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'bling/vim-airline'
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

Plug 'tpope/vim-sensible'

if filereadable(expand('~/local-dot-files/local_vim_plug_vimrc'))
    source ~/local-dot-files/local_vim_plug_vimrc
endif

" Initialize plugin system
call plug#end()

" Plugins to revisit
" Plug 'jreybert/vimagit' " Ease your git workflow within Vim
" Plug 'kristijanhusak/vim-carbon-now-sh' " Open selected text in https://carbon.now.sh
" Plug 'SirVer/ultisnips' " The ultimate snippet solution for Vim
