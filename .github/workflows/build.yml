---
name: Build

on:
  - pull_request
  - push

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: >
      ${{
      ( github.actor == 'dependabot[bot]' &&
        github.event_name == 'pull_request' ) ||
      ( github.actor != 'dependabot[bot]' &&
        github.event_name == 'push' )
      }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04']

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.3'

      - name: Set up symlink to ~/dot-files
        run: cd && ln -s $GITHUB_WORKSPACE .

      - name: Install symlinks
        run: ./installer/symlinks.sh

      - name: Install ubi
        run: ./installer/ubi.sh
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Maybe install MacOS deps
        run: ./installer/homebrew.sh

      - name: Maybe install Linux deps
        run: ./installer/linux.sh

      - name: Configure Git
        run: ./configure/git.sh

      - name: Install fpp
        run: ./installer/fpp.sh

      - name: Configure SSH
        run: ./configure/ssh.sh

      - name: Install pip
        run: ./installer/pip.sh

      - name: Configure vim
        run: ./configure/vim.sh

      - name: Install nvim
        run: ./installer/nvim.sh

      - name: Install tmux
        run: sudo apt install libevent-dev && ./installer/tmux.sh

      - name: Configure tmux
        run: ./configure/tmux.sh

      - name: Install npm deps
        run: ./installer/npm.sh

      - name: Install CPAN deps
        run: ./installer/cpan.sh

      - name: Install Cargo
        run: ./installer/cargo.sh
        if: ${{ matrix.os == 'ubuntu-18.04' }}

      - name: Install Rust deps via pkgs
        run: ./installer/cargo.sh
        env:
          PREFER_PKGS: 1
        if: ${{ matrix.os != 'ubuntu-18.04' }}

      - name: Maybe install cz
        run: ./installer/cpan.sh

