#!/bin/bash

# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

source "$CONFIG_DIR/colors.sh"
PLUGIN_DIR="$CONFIG_DIR/plugins"

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

if system_profiler SPDisplaysDataType | grep -q "Resolution: 2880 x 1864 Retina"; then
    HEIGHT=33
else
    HEIGHT=25
fi

sketchybar --bar position=top height=$HEIGHT blur_radius=0 color=$BLACK shadow=on

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
    padding_left=5
    padding_right=5
    icon.font="Hack Nerd Font:Bold:17.0"
    label.font="Hack Nerd Font:Bold:14.0"
    icon.color="$WHITE"
    label.color="$WHITE"
    icon.padding_left=4
    icon.padding_right=4
    label.padding_left=4
    label.padding_right=4
)

button=(
    background.corner_radius=5
    icon.padding_left=7
    icon.padding_right=7
    background.color="$BLUE"
    label.padding_right=8
)

sketchybar --default "${default[@]}"

sketchybar --add item rocket left \
    --set rocket icon=ü§ò label.drawing=off

##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

SPACE_ICONS=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10")
for i in "${!SPACE_ICONS[@]}"; do
    sid="$((i + 1))"
    space=(
        space="$sid"
        icon="${SPACE_ICONS[i]}"
        icon.padding_left=7
        icon.padding_right=7
        background.corner_radius=5
        background.height="$HEIGHT"
        label.drawing=off
        script="$PLUGIN_DIR/space.sh"
        # click_script="yabai -m space --focus $sid"
        "${button[@]}"
    )
    sketchybar --add space space."$sid" left --set space."$sid" "${space[@]}"
done

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

sketchybar --add item chevron left \
    --set chevron icon=ÔÅî label.drawing=off \
    --add item front_app left \
    --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
    --subscribe front_app front_app_switched

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

sketchybar --add item clock right \
    --set clock update_freq=10 icon=Ôê∫ script="$PLUGIN_DIR/clock.sh" "${button[@]}" \
    --add item volume right \
    --set volume script="$PLUGIN_DIR/volume.sh" "${button[@]}" \
    --subscribe volume volume_change

if [ -f "$PLUGIN_DIR/.laptop" ]; then
    sketchybar --add item battery right \
        --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" "${button[@]}" \
        --subscribe battery system_woke power_source_change
fi

sketchybar --add item wifi right \
    --set wifi script="$PLUGIN_DIR/wifi.sh" "${button[@]}" \
    background.padding_right=6 \
    update_freq=30

sketchybar -m --add item mic right \
    --set mic update_freq=3 "${button[@]}" icon.padding_right=0 \
    script="$PLUGIN_DIR/simple-mic.sh" \
    click_script="$PLUGIN_DIR/simple-mic-click.sh" \
    --subscribe mic volume_change

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
